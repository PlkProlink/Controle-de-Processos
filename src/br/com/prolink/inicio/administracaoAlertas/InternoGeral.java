/*
 * Todos direitos reservados a Tiago Dias de Souza
 * www.github.com/tiagods
 */
package br.com.prolink.inicio.administracaoAlertas;

import br.com.prolink.inicio.ConexaoStatement;
import br.com.prolink.inicio.TelaPrincipal;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author User
 */
public class InternoGeral extends javax.swing.JInternalFrame {
    
    
    int departamento=0;
    int documento=0;
    int comercial=0;
    
    String valor = TelaPrincipal.txt_codigo.getText(), abrir="";
    
    List<String> nomeUser = new ArrayList<>();
    List<String> dep = new ArrayList<>();
    
    
    /**
     * Creates new form InternoComercial
     */
    public InternoGeral() {
        initComponents();
        btRelatorio.setVisible(false);
        carregaCombo();
        preencherDepartamentos(valor);
        
        try{
            Connection con = new ConexaoStatement().getConnetion();
            String sql = "select SUBSTRING_INDEX(SUBSTRING_INDEX(Nome, ' ', 2), ' ', -2) as Nome, Departamento from login where Ativo=1 order by Departamento";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs!=null){
                while(rs.next()){
                    nomeUser.add(rs.getString("Nome"));
                    dep.add(rs.getString("Departamento"));
                }
            }
            String vazio = "";
            cbComercial.addItem(vazio);
            cbContabil.addItem(vazio);
            cbContratos.addItem(vazio);
            cbDP.addItem(vazio);
            cbFisc.addItem(vazio);
            cbReg.addItem(vazio);

            //adicionar departamentos
            for(int i = 0;i<dep.size();i++){
                if(dep.get(i).equals("Comercial")){
                    cbComercial.addItem(nomeUser.get(i));
                }
                if(dep.get(i).equals("Contabil")){
                    cbContabil.addItem(nomeUser.get(i));
                }
                if(dep.get(i).equals("Contratos")){
                    cbContratos.addItem(nomeUser.get(i));
                }
                if(dep.get(i).equals("Fiscal")){
                    
                    
                    if(nomeUser.get(i).contains("Robison"))
                    {  
                        nomeUser.set(i, "Robison");
                    }
                    cbFisc.addItem(nomeUser.get(i));
                }
                if(dep.get(i).equals("Pessoal")){
                    cbDP.addItem(nomeUser.get(i));
                }
                if(dep.get(i).equals("Regularizacao")){
                    cbReg.addItem(nomeUser.get(i));
                }
            }
            cbComercial.setSelectedItem(vazio);
            cbContabil.setSelectedItem(vazio);
            cbContratos.setSelectedItem(vazio);
            cbDP.setSelectedItem(vazio);
            cbFisc.setSelectedItem(vazio);
            cbReg.setSelectedItem(vazio);
            con.close();
        }catch(SQLException e){
        }
        jpResp.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jpPendencias = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btRelatorio = new javax.swing.JButton();
        btAlerta = new javax.swing.JButton();
        jpCalc = new javax.swing.JPanel();
        lbCFisc = new javax.swing.JLabel();
        lbCReg = new javax.swing.JLabel();
        lbCCom = new javax.swing.JLabel();
        lbCContabil = new javax.swing.JLabel();
        lbCContratos = new javax.swing.JLabel();
        lbCDp = new javax.swing.JLabel();
        lbDReg = new javax.swing.JLabel();
        lbDocCom = new javax.swing.JLabel();
        lbDocContabil = new javax.swing.JLabel();
        lbDContratos = new javax.swing.JLabel();
        lbDDp = new javax.swing.JLabel();
        jpResp = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        cbComercial = new javax.swing.JComboBox<>();
        cbContabil = new javax.swing.JComboBox<>();
        cbContratos = new javax.swing.JComboBox<>();
        cbDP = new javax.swing.JComboBox<>();
        cbFisc = new javax.swing.JComboBox<>();
        cbReg = new javax.swing.JComboBox<>();
        btAvancar = new javax.swing.JButton();

        setBackground(new java.awt.Color(250, 250, 250));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(860, 600));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(250, 250, 250));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(500, 250));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(250, 250, 250));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Visão Geral");
        jLabel1.setOpaque(true);

        jComboBox1.setBackground(new java.awt.Color(250, 250, 250));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });

        jpPendencias.setBackground(new java.awt.Color(250, 250, 250));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Departamento");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Controle");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Total de Pendências");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Documentos");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Comercial");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Contabil");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Contratos");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Dp.Pessoal");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Fiscal");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Regularização");

        btRelatorio.setText("Relatório");
        btRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRelatorioActionPerformed(evt);
            }
        });

        btAlerta.setText("Alerta");
        btAlerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlertaActionPerformed(evt);
            }
        });

        jpCalc.setBackground(new java.awt.Color(250, 250, 250));

        lbCFisc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCFisc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCFisc.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbCFisc.setOpaque(true);

        lbCReg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCReg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCReg.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbCReg.setOpaque(true);

        lbCCom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCCom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCCom.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbCCom.setOpaque(true);

        lbCContabil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCContabil.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCContabil.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbCContabil.setOpaque(true);

        lbCContratos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCContratos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCContratos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbCContratos.setOpaque(true);

        lbCDp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbCDp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCDp.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbCDp.setOpaque(true);

        lbDReg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDReg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDReg.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbDReg.setOpaque(true);

        lbDocCom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDocCom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDocCom.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbDocCom.setOpaque(true);

        lbDocContabil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDocContabil.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDocContabil.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbDocContabil.setOpaque(true);

        lbDContratos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDContratos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDContratos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbDContratos.setOpaque(true);

        lbDDp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDDp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbDDp.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbDDp.setOpaque(true);

        javax.swing.GroupLayout jpCalcLayout = new javax.swing.GroupLayout(jpCalc);
        jpCalc.setLayout(jpCalcLayout);
        jpCalcLayout.setHorizontalGroup(
            jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCalcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCContratos, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCDp, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCFisc, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCReg, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbCCom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbCContabil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDContratos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDDp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbDocCom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbDocContabil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );

        jpCalcLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbCCom, lbCContabil, lbCContratos, lbCDp, lbCFisc, lbCReg, lbDContratos, lbDDp, lbDReg, lbDocCom, lbDocContabil});

        jpCalcLayout.setVerticalGroup(
            jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCalcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCalcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpCalcLayout.createSequentialGroup()
                        .addComponent(lbCCom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbCContabil, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbCContratos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbCDp, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbCFisc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbCReg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCalcLayout.createSequentialGroup()
                        .addComponent(lbDocCom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbDocContabil, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbDContratos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(lbDDp, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbDReg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jpCalcLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lbCCom, lbCContabil, lbCContratos, lbCDp, lbCFisc, lbCReg, lbDContratos, lbDDp, lbDReg, lbDocCom, lbDocContabil});

        javax.swing.GroupLayout jpPendenciasLayout = new javax.swing.GroupLayout(jpPendencias);
        jpPendencias.setLayout(jpPendenciasLayout);
        jpPendenciasLayout.setHorizontalGroup(
            jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPendenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPendenciasLayout.createSequentialGroup()
                        .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jpPendenciasLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPendenciasLayout.createSequentialGroup()
                        .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpPendenciasLayout.createSequentialGroup()
                                .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(jpCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpPendenciasLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btRelatorio))))
                        .addGap(31, 31, 31))))
        );

        jpPendenciasLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btAlerta, btRelatorio});

        jpPendenciasLayout.setVerticalGroup(
            jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPendenciasLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGroup(jpPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPendenciasLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPendenciasLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(btRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAlerta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpResp.setBackground(new java.awt.Color(250, 250, 250));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Dp.Pessoal");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Fiscal");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Contabil");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Regularização");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Contratos");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Comercial");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Gerenciar Responsável");

        btAvancar.setText("Avançar");
        btAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAvancarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpRespLayout = new javax.swing.GroupLayout(jpResp);
        jpResp.setLayout(jpRespLayout);
        jpRespLayout.setHorizontalGroup(
            jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRespLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpRespLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btAvancar))
                    .addGroup(jpRespLayout.createSequentialGroup()
                        .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(154, 154, 154)
                        .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbComercial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbContabil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbContratos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbDP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbFisc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbReg, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        jpRespLayout.setVerticalGroup(
            jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRespLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(cbComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(cbContabil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(cbContratos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(cbDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cbFisc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(cbReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAvancar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpPendencias, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpResp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpPendencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        setBounds(0, 0, 860, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        this.setLocation(0,0);
    }//GEN-LAST:event_formComponentMoved

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost
        
    }//GEN-LAST:event_jComboBox1FocusLost

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(!jComboBox1.getSelectedItem().equals("Clique aqui para Ativar!")){
            combo((String)jComboBox1.getSelectedItem());
            preencherDepartamentos(TelaPrincipal.txt_codigo.getText());
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void btRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRelatorioActionPerformed
        jpResp.setVisible(false);
        abrir="Relatorio";
        List <String> nova = new ArrayList<>();
//                NovoJFrame novo = new NovoJFrame(abrir, "Geral", nova);
//                novo.setVisible(true);
                
        Relatorios relatorio = new Relatorios(abrir, "Geral", nova);
        jDesktopPane1.removeAll();
        ((BasicInternalFrameUI)relatorio.getUI()).setNorthPane(null);
        jDesktopPane1.add(relatorio);
        relatorio.setVisible(true);
        
    }//GEN-LAST:event_btRelatorioActionPerformed

    private void btAlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlertaActionPerformed
        jpResp.setVisible(true);
        abrir="Alerta";
    }//GEN-LAST:event_btAlertaActionPerformed

    private void btAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAvancarActionPerformed
        if(TelaPrincipal.txt_codigo.getText()!=null && !TelaPrincipal.txt_codigo.getText().equals("")){
            if(abrir=="Alerta"){
                List<String> nome = new ArrayList<>();
                boolean liberar = false;
                if(!cbComercial.getSelectedItem().equals("")){
                    nome.add((String)cbComercial.getSelectedItem());
                    liberar = true;
                }
                if(!cbContabil.getSelectedItem().equals("")){
                    nome.add((String)cbContabil.getSelectedItem());
                    liberar = true;
                }
                if(!cbContratos.getSelectedItem().equals("")){
                    nome.add((String)cbContratos.getSelectedItem());
                    liberar = true;
                }
                if(!cbFisc.getSelectedItem().equals("")){
                    nome.add((String)cbFisc.getSelectedItem());
                    liberar = true;
                }
                if(!cbDP.getSelectedItem().equals("")){
                    nome.add((String)cbDP.getSelectedItem());
                    liberar = true;
                }
                if(!cbReg.getSelectedItem().equals("")){
                    nome.add((String)cbReg.getSelectedItem());
                    liberar = true;
                }
                if(liberar==true){
                    Relatorios relatorio = new Relatorios(abrir, "Geral", nome);
                    jDesktopPane1.removeAll();
                    ((BasicInternalFrameUI)relatorio.getUI()).setNorthPane(null);
                    jDesktopPane1.add(relatorio);
                    relatorio.setVisible(true);
                }
                else
                    JOptionPane.showMessageDialog(null, "Para enviar cobrança selecione ao menos 1(Um) destinatário");
            }
            else{
                List <String> nova = new ArrayList<>();
//                NovoJFrame novo = new NovoJFrame(abrir, "Geral", nova);
//                novo.setVisible(true);
                
                Relatorios relatorio = new Relatorios(abrir, "Geral", nova);
                jDesktopPane1.removeAll();
                ((BasicInternalFrameUI)relatorio.getUI()).setNorthPane(null);
                jDesktopPane1.add(relatorio);
                relatorio.setVisible(true);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Ative um cliente para prosseguir!");
    }//GEN-LAST:event_btAvancarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlerta;
    private javax.swing.JButton btAvancar;
    private javax.swing.JButton btRelatorio;
    private javax.swing.JComboBox<String> cbComercial;
    private javax.swing.JComboBox<String> cbContabil;
    private javax.swing.JComboBox<String> cbContratos;
    private javax.swing.JComboBox<String> cbDP;
    private javax.swing.JComboBox<String> cbFisc;
    private javax.swing.JComboBox<String> cbReg;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jpCalc;
    private javax.swing.JPanel jpPendencias;
    private javax.swing.JPanel jpResp;
    private javax.swing.JLabel lbCCom;
    private javax.swing.JLabel lbCContabil;
    private javax.swing.JLabel lbCContratos;
    private javax.swing.JLabel lbCDp;
    private javax.swing.JLabel lbCFisc;
    private javax.swing.JLabel lbCReg;
    private javax.swing.JLabel lbDContratos;
    private javax.swing.JLabel lbDDp;
    private javax.swing.JLabel lbDReg;
    private javax.swing.JLabel lbDocCom;
    private javax.swing.JLabel lbDocContabil;
    // End of variables declaration//GEN-END:variables
    
    public void carregaCombo(){
        try{
            String sql ="select SUBSTRING_INDEX(SUBSTRING_INDEX(Cliente, ' ', 3), ' ', -3) as Cliente from cadastrodeprocesso where Situacao=1";
            Connection con = new ConexaoStatement().getConnetion();
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            jComboBox1.removeAll();
            jComboBox1.addItem("Clique aqui para Ativar!");
            
            String vlr = TelaPrincipal.txt_nome.getText();
            if(!vlr.equals(null) && !vlr.equals(""))
                jComboBox1.setSelectedItem(vlr);
            else
                jComboBox1.setSelectedItem("Clique aqui para Ativar!");
            
            if(rs!=null){
                while(rs.next()){
                    jComboBox1.addItem(rs.getString("Cliente"));
                }
            }
            
            
        }catch(SQLException e){
        }
    }
    
    public void combo(String valor){
        if(valor!=null && !valor.equals("")){
            Connection con = null;
            try{
                String sql ="select * from cadastrodeprocesso where Cliente like '"+valor+"%'";
                con = new ConexaoStatement().getConnetion();
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();

                if(rs!=null){
                    if(rs.next()){
                        TelaPrincipal.txt_codigo.setText(rs.getString("codNumerodoprocesso"));
                        TelaPrincipal.txt_nome.setText(rs.getString("Cliente"));
                        TelaPrincipal.txt_id.setText(rs.getString("Apelido"));
                        TelaPrincipal.txt_classificacao.setText(rs.getString("Classificacao"));
                        TelaPrincipal.txt_ativada.setText("");
                        TelaPrincipal.txt_finalizada.setText("");
                    }
                }

            }catch(SQLException e){
                e.printStackTrace();
            }finally{try{
                if(con!=null)con.close();}catch(Exception e){}
            }
        }
    }
    private void preencherDepartamentos(String valor){//buscar valores apenas no departamento
        if(valor!=null){
            Connection con=null;
            try{
                String sql ="select a.AndamentoTaxaDeImplantacaoEFormaDePagamento as COMERCIAL1," +
                            "a.AndamentoGravarSenhasFiscais AS COMERCIAL2," +
                            "a.AndamentoGerarOS AS COMERCIAL3," +
                            "a.AndamentoEnviarTermoResponsaparacliente AS COMERCIAL4," +
                            "a.AndamentoPropastaComercial AS COMERCIAL5," +
                            "a.AndamentoEnvioDiagnose AS COMERCIAL6," +
                            "a.AndamentoPesquisaFiscal AS COMERCIAL7," +
                            "a.AndamentoRequisicaoDocumentos AS COMERCIAL8," +
                            "a.AndamentoConfirmarRecebimentoDeposito AS COMERCIAL9," +
                            "b.AndamentoGerarPlanoDeContas AS CONTABIL1," +
                            "c.AndamentoElaborarContratoPrestacaoDeServico AS CONTRATOS1," +
                            "c.AndamentoCadastrarControlEContmatic AS CONTRATOS2," +
                            "c.AndamentoAtivarCliente AS CONTRATOS3," +
                            "c.AndamentoElaborarPrefilFiscal AS CONTRATOS4," +
                            "c.AndamentoReceberContratoAssCliente AS CONTRATOS5," +
                            "c.AndamentoGerarIDPlanCadastro AS CONTRATOS6," +
                            "d.AndamentoCadastroDoSocioNoControl AS DP1," +
                            "d.AndamentoCadastroDependentesdoSocioADM AS DP2," +
                            "d.AndamentoIplantacaodadosFolhaPg AS DP3," +
                            "f.AndamenoDistribuirFuncionarioInterno AS FISC1," +
                            "f.AndamentoValidarPerfilFiscal AS FISC2," +
                            "r.AndamentoEnviarTernoReponsaParaComercial AS REG1," +
                            "r.AndamentoArquivarProcesso AS REG2 " +
                            "from comercial as a " +
                            "inner join contabil as b " +
                            "on a.Numerodoprocesso= b.Numerodoprocesso " +
                            "inner join contratos as c " +
                            "on b.Numerodoprocesso=c.Numerodoprocesso " +
                            "inner join fiscal as f " +
                            "on c.Numerodoprocesso=f.Numerodoprocesso " +
                            "inner join dp as d " +
                            "on f.Numerodoprocesso=d.Numerodoprocesso " +
                            "inner join regularizacao as r " +
                            "on d.Numerodoprocesso= r.Numerodoprocesso " +
                            "where a.Numerodoprocesso=?";
                con = new ConexaoStatement().getConnetion();
                
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, valor);
                ResultSet rs = ps.executeQuery();

                if(rs!=null){
                    if(rs.next()){
                        departamento=0;
                        //comercial
                        contar(lbCCom, rs.getString("COMERCIAL1"));
                        contar(lbCCom, rs.getString("COMERCIAL2"));
                        contar(lbCCom, rs.getString("COMERCIAL3"));
                        contar(lbCCom, rs.getString("COMERCIAL4"));
                        contar(lbCCom, rs.getString("COMERCIAL5"));
                        contar(lbCCom, rs.getString("COMERCIAL6"));
                        contar(lbCCom, rs.getString("COMERCIAL7"));
                        contar(lbCCom, rs.getString("COMERCIAL8"));
                        contar(lbCCom, rs.getString("COMERCIAL9"));
                        
                        //contabil
                        departamento=0;
                        contar(lbCContabil, rs.getString("CONTABIL1"));
                        
                        //contratos
                        departamento=0;
                        contar(lbCContratos, rs.getString("CONTRATOS1"));
                        contar(lbCContratos, rs.getString("CONTRATOS2"));
                        contar(lbCContratos, rs.getString("CONTRATOS3"));
                        contar(lbCContratos, rs.getString("CONTRATOS4"));
                        contar(lbCContratos, rs.getString("CONTRATOS5"));
                        contar(lbCContratos, rs.getString("CONTRATOS6"));
                        //dp
                        departamento=0;
                        contar(lbCDp, rs.getString("DP1"));
                        contar(lbCDp, rs.getString("DP2"));
                        contar(lbCDp, rs.getString("DP3"));

                        //fiscal
                        departamento=0;
                        contar(lbCFisc, rs.getString("FISC1"));
                        contar(lbCFisc, rs.getString("FISC2"));
                        //regularizacao
                        departamento=0;
                        contar(lbCReg, rs.getString("REG1"));
                        contar(lbCReg, rs.getString("REG2"));
                    }
                    preencherDocumentos(valor);
                }

            }catch(SQLException e){
                e.printStackTrace();
            }finally{try{
                if(con!=null)con.close();}catch(Exception e){}
            }
        }
    }
    private void preencherDocumentos(String processo){//buscar valores em documentos
    
    Connection con = new ConexaoStatement().getConnetion();
    String sql = "select * from documentos where Numerodoprocesso='"+processo+"'";
    try{
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs!=null)
                while(rs.next()){//ira somar pendencias de cada resultado
                    departamento=0;
                    comercial=0;
                    //area contratos
                    contarDocumentos(lbDContratos,rs.getString("AtoConstitutivo"));
                    contarDocumentos(lbDContratos,rs.getString("RGeCPFSocio"));
                    contarDocumentos(lbDContratos,rs.getString("ComprovanteResidencia"));
                    contarDocumentos(lbDContratos,rs.getString("NumeroPIS"));
                    contarDocumentos(lbDContratos,rs.getString("AutorizacaoNotaFiscalEletronica"));
                    contarDocumentos(lbDContratos,rs.getString("SenhaPostoFiscal"));
                    contarDocumentos(lbDContratos,rs.getString("SenhaSimplesNacional"));
                    contarDocumentos(lbDContratos,rs.getString("ConfigurarPerfilFiscalNoSitePrefeituraDocumento"));
                    
                    departamento=0;
                    //area contabil
                    contarDocumentos(lbDocContabil,rs.getString("BalancoDRE"));
                    contarDocumentos(lbDocContabil,rs.getString("ComposicaoDeContasPatrimoniais"));
                    contarDocumentos(lbDocContabil,rs.getString("PlanoDeContas"));
                    contarDocumentos(lbDocContabil,rs.getString("BalanceteExercicio"));
                    departamento=0;
                    //departamento pessoal
                    contarDocumentos(lbDDp,rs.getString("FolhadePagamentoDocumento"));
                    contarDocumentos(lbDDp,rs.getString("LivroOuFichadeRegistroFuncionario"));
                    contarDocumentos(lbDDp,rs.getString("CAGED"));
                    contarDocumentos(lbDDp,rs.getString("Recisao"));
                    contarDocumentos(lbDDp,rs.getString("Ferias"));
                    contarDocumentos(lbDDp,rs.getString("Afastamento"));
                    departamento=0;
                    //regularizacao senhas
                    contarDocumentos(lbDReg,rs.getString("OutorgaSenhaEletronicaReceita"));
                    contarDocumentos(lbDReg,rs.getString("TermodeResponsabilidadeDocumento"));
                    contarDocumentos(lbDReg,rs.getString("SenhaINSS"));
                    colorir(jpCalc);
                    }
//            statusTabel(tbRecebimento);
//            statusTabel(tbSolicitacao);
            }catch (SQLException erro){
                erro.printStackTrace();
            }finally{try{if(con!=null)con.close();}catch(Exception e){}}
}
    private void contar(JLabel label, String valor){
        int novoValor=0;
        if(valor.trim().equals("Em Aberto") || valor.trim().equals("")){
            novoValor=1;
        }
        this.departamento+=novoValor;
        label.setText(""+departamento);
    }
    private void contarDocumentos(JLabel label, String valor){//contara documentos pendentes e informará na tela
        int novoValor=1;
        if(valor.trim().equals("Aguardando Validação")){
            this.departamento+=novoValor;
        }
        else if(!valor.trim().equals("Validação Efetuada") && !valor.trim().equals("Aguardando Validação")){
            //acumula comercial
            this.comercial+=novoValor;
        }
        lbDocCom.setText(""+comercial);
        label.setText(""+departamento);
    }
    private void colorir(JPanel panel){
        for(int i = 0;i<panel.getComponentCount(); i++){
            if(panel.getComponent(i) instanceof JLabel){
                int qtd = Integer.parseInt(((JLabel)panel.getComponent(i)).getText());
                if(qtd==0){
                    ((JLabel)panel.getComponent(i)).setBackground(Color.green);
                }
                else if(qtd>=1 && qtd<=100){
                    ((JLabel)panel.getComponent(i)).setBackground(Color.red);
                }
            }
        }
    }
}
