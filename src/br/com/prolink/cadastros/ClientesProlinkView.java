/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.prolink.cadastros;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import static br.com.prolink.cadastros.CadastroClientes.*;
import br.com.prolink.factory.ConexaoStatement;
import br.com.prolink.factory.ConfigTables;
import java.text.SimpleDateFormat;
import java.util.Date;
/**
 *
 * @author Tiago
 */
public class ClientesProlinkView extends javax.swing.JDialog implements ConfigTables{
    /**
     * Creates new form ClientesProlinkView
     */
    public ClientesProlinkView(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Connection con = ConexaoStatement.getInstance().getConnetion();
        try{
            PreparedStatement ps = con.prepareStatement("select id,status,nome from cliente");
            ResultSet rs = ps.executeQuery();
            preencherTabela(rs);
        }catch(SQLException e){
        }finally{
            try{con.close();}catch(SQLException e){}
        }
        
    }
    private void preencherTabela(ResultSet rs) throws SQLException{
        DefaultTableModel model = new DefaultTableModel(new Object[]{"CLIENTE ID","STATUS","NOME"},0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                });
            }
            jTable1.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btImportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clientes Prolink");

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btImportar.setText("Importar");
        btImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImportarActionPerformed(evt);
            }
        });

        jScrollPane1.setOpaque(false);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jTable1.setRowHeight(20);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
        }

        jLabel1.setText("Pesquisar:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nome", "Status" }));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btImportar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btImportar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        String coluna = "ID";
        boolean validou = validar();
        if(validou){
            if("ID".equals(jComboBox1.getSelectedItem())){
                coluna="id";
            }
            else if("Nome".equals(jComboBox1.getSelectedItem())){
                coluna="nome";
            }
            else if("Status".equals(jComboBox1.getSelectedItem())){
                coluna="status";
            }
            Connection con = ConexaoStatement.getInstance().getConnetion();
            try{
                PreparedStatement ps = con.prepareStatement("select id,status,nome from cliente where "+coluna+" like '"+jTextField1.getText()+"%'");
                ResultSet rs  = ps.executeQuery();
                preencherTabela(rs);
            }catch(SQLException e){}
            if(con!=null){try{con.close();}catch(SQLException e){}}
            
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void btImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImportarActionPerformed
        String[] lista = new String[3];
        int linha = jTable1.getSelectedRow();
        for(int i =0;i<lista.length; i++){
            lista[i]=(String)jTable1.getValueAt(linha, i);
        }
        boolean exists = verificarSeExiste(lista[0]);
        if(!exists){
            txt_apelido.setText(lista[0]);
            txt_data.setText(new SimpleDateFormat("dd/MM/yyyy").format(new Date()));
            txt_datainicio.setText("");
            txt_datafim.setText("");

            Connection con  = ConexaoStatement.getInstance().getConnetion();
            try{
                PreparedStatement ps = con.prepareStatement("select * from "+CLASSIFICACAO+" where "+CLASSIFICACAO_Status+" like '"+lista[1]+"'");
                ResultSet rs = ps.executeQuery();
                if(rs!=null){
                    if(rs.next()){
                        String classificacao = rs.getString(2);
                        cb_classificacao.setSelectedItem(classificacao);
                    }
                    else{
                        String insert = "insert into "+CLASSIFICACAO+" ("+CLASSIFICACAO_Status+") values ('"+lista[1]+"')";
                        if(ps.executeUpdate(insert)>0){
                            cb_classificacao.addItem(lista[1]);
                            cbClassificacaoMenu.addItem(lista[1]);
                            cb_classificacao.setSelectedItem(lista[1]);
                        }
                        
                    }
                }
                
            }catch(SQLException e){e.printStackTrace();}

            if(con!=null){try{con.close();}catch(SQLException e){}}

            txt_nome.setText(lista[2]);
            
            telaEmEdicao = true;
            
            this.dispose();
        }
        else
            JOptionPane.showMessageDialog(null, "Esse registro ja existe! ","Registro já cadastrado...",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btImportarActionPerformed
   private boolean validar(){
       if("ID".equals(jComboBox1.getSelectedItem())){
           try{ 
                Integer.parseInt(jTextField1.getText());
                return true;
           }catch(NumberFormatException e){
               JOptionPane.showMessageDialog(null, "Digite um numero valido para APELIDO", "Campo ID é numerico",JOptionPane.ERROR_MESSAGE);
               return false;
           }
       }
       else return true;
   }
    /**
     * @param args the command line arguments
     */
   private boolean verificarSeExiste(String valor){
       Connection con = new ConexaoStatement().getConnetion();
       try{
            PreparedStatement ps = con.prepareStatement("select * from "+CADASTRODEPROCESSO+" where "+CADASTRODEPROCESSO_Apelido+"='"+valor+"'");
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                return true;
            }
            else
                return false;
        }catch(SQLException e){e.printStackTrace();}
       return false;
   }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientesProlinkView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientesProlinkView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientesProlinkView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientesProlinkView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ClientesProlinkView dialog = new ClientesProlinkView(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btImportar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
